#!/bin/bash
#=========================================================================
# Description: Install armbian to EMMC
# Copyright (C) 2021 https://github.com/unifreq/openwrt_packit
# Copyright (C) 2021 https://github.com/ophub/amlogic-s9xxx-armbian
#=========================================================================

echo "Start install armbian to emmc..."

root_devname=$(df / | tail -n1 | awk '{print $1}' | awk -F '\/' '{print substr($3, 1, length($3)-2)}')
if lsblk -l | grep -E "^${root_devname}boot0" >/dev/null; then
    echo "you are running in emmc mode, please boot system with usb or tf card!"
    exit 1
fi

install_emmc="$(lsblk -l -o NAME | grep -oE '(mmcblk[0-9]?boot0)' | sed "s/boot0//g")"
if [[ "${install_emmc}" == "" ]]; then
    echo "No emmc can be found to install the openwrt system!"
    exit 1
fi

DEV_EMMC="/dev/${install_emmc}"
echo ${DEV_EMMC}

cat <<EOF
**************************************************************************
Please select amlogic s9xxx box model:

1.  X96-Max+ (4G DDR) -------- [ S905x3 / CPU: 2124Mtz / NETWORK: 1000M ]
2.  HK1-Box (4G DDR) --------- [ S905x3 / CPU: 2124Mtz / NETWORK: 1000M ]
3.  H96-Max-X3 (4G DDR) ------ [ S905x3 / CPU: 2124Mtz / NETWORK: 1000M ]
4.  Ugoos-X3 (Cube/Pro/Plus) - [ S905x3 / CPU: 2124Mtz / NETWORK: 1000M ]
5.  X96-Max-4G --------------- [ S905x2 / CPU: 1944Mtz / NETWORK: 1000M ]
6.  X96-Max-2G --------------- [ S905x2 / CPU: 1944Mtz / NETWORK: 100M  ]
7.  Belink-GT-King ----------- [ S922x  / CPU: 2124Mtz / NETWORK: 1000M ]
8.  Belink-GT-King-Pro ------- [ S922x  / CPU: 2124Mtz / NETWORK: 1000M ]
9.  UGOOS-AM6-Plus ----------- [ S922x  / CPU: 2124Mtz / NETWORK: 1000M ]
10. Octopus-Planet ----------- [ S912   / CPU: 2124Mtz / NETWORK: 1000M ]
11. Phicomm-n1 --------------- [ S905d  / CPU: 2124Mtz / NETWORK: 1000M ]
12. hg680p & b860h ----------- [ S905x  / CPU: 2124Mtz / NETWORK: 1000M ]
13. X96-Mini & TX3-Mini ------ [ S905w  / CPU: 1944Mtz / NETWORK: 100M  ]

0. Other --------------------- [ Customize the skipped space (unit: MB) ]
**************************************************************************
EOF

SKIP=700
BOOT=256

read select
case "${select}" in
      1) FDTFILE="meson-sm1-x96-max-plus.dtb"
         UBOOT_OVERLOAD="u-boot-x96maxplus.bin"
         MAINLINE_UBOOT="/lib/u-boot/x96maxplus-u-boot.bin.sd.bin"
         ANDROID_UBOOT="/lib/u-boot/hk1box-bootloader.img"
         AMLOGIC_SOC="s905x3"
         SKIP=1350
         ;;
      2) FDTFILE="meson-sm1-hk1box-vontar-x3.dtb"
         UBOOT_OVERLOAD="u-boot-x96maxplus.bin"
         MAINLINE_UBOOT="/lib/u-boot/hk1box-u-boot.bin.sd.bin"
         ANDROID_UBOOT=""
         AMLOGIC_SOC="s905x3"
         SKIP=1350
         ;;
      3) FDTFILE="meson-sm1-h96-max-x3.dtb"
         UBOOT_OVERLOAD="u-boot-x96maxplus.bin"
         MAINLINE_UBOOT="/lib/u-boot/h96maxx3-u-boot.bin.sd.bin"
         ANDROID_UBOOT=""
         AMLOGIC_SOC="s905x3"
         SKIP=1350
         ;;
      4) FDTFILE="meson-sm1-ugoos-x3.dtb"
         UBOOT_OVERLOAD="u-boot-ugoos-x3.bin"
         MAINLINE_UBOOT=""
         ANDROID_UBOOT=""
         AMLOGIC_SOC="s905x3"
         SKIP=1350
         ;;
      5) FDTFILE="meson-g12a-x96-max.dtb"
         UBOOT_OVERLOAD="u-boot-x96max.bin"
         MAINLINE_UBOOT="/lib/u-boot/x96max-u-boot.bin.sd.bin"
         ANDROID_UBOOT=""
         AMLOGIC_SOC="s905x2"
         SKIP=1350
         ;;
      6) FDTFILE="meson-g12a-x96-max-rmii.dtb"
         UBOOT_OVERLOAD="u-boot-x96max.bin"
         MAINLINE_UBOOT="/lib/u-boot/x96max-u-boot.bin.sd.bin"
         ANDROID_UBOOT=""
         AMLOGIC_SOC="s905x2"
         SKIP=1350
         ;;
      7) FDTFILE="meson-g12b-gtking.dtb"
         UBOOT_OVERLOAD="u-boot-gtkingpro.bin"
         MAINLINE_UBOOT="/lib/u-boot/gtking-u-boot.bin.sd.bin"
         ANDROID_UBOOT=""
         AMLOGIC_SOC="s922x"
         SKIP=1350
         ;;
      8) FDTFILE="meson-g12b-gtking-pro.dtb"
         UBOOT_OVERLOAD="u-boot-gtkingpro.bin"
         MAINLINE_UBOOT="/lib/u-boot/gtkingpro-u-boot.bin.sd.bin"
         ANDROID_UBOOT=""
         AMLOGIC_SOC="s922x"
         SKIP=1350
         ;;
      9) FDTFILE="meson-g12b-ugoos-am6.dtb"
         UBOOT_OVERLOAD="u-boot-gtkingpro.bin"
         MAINLINE_UBOOT="/lib/u-boot/gtkingpro-u-boot.bin.sd.bin"
         ANDROID_UBOOT=""
         AMLOGIC_SOC="s922x"
         SKIP=1350
         ;;
      10) FDTFILE="meson-gxm-octopus-planet.dtb"
         UBOOT_OVERLOAD="u-boot-zyxq.bin"
         MAINLINE_UBOOT=""
         ANDROID_UBOOT=""
         AMLOGIC_SOC="s912"
         SKIP=700
         ;;
      11) FDTFILE="meson-gxl-s905d-phicomm-n1.dtb"
         UBOOT_OVERLOAD="u-boot-n1.bin"
         MAINLINE_UBOOT=""
         ANDROID_UBOOT="/lib/u-boot/u-boot-2015-phicomm-n1.bin"
         AMLOGIC_SOC="s905d"
         SKIP=700
         ;;
      12) FDTFILE="meson-gxl-s905x-p212.dtb"
         UBOOT_OVERLOAD="u-boot-p212.bin"
         MAINLINE_UBOOT=""
         ANDROID_UBOOT=""
         AMLOGIC_SOC="s905x"
         SKIP=700
         ;;
      13) FDTFILE="meson-gxl-s905w-tx3-mini.dtb"
         UBOOT_OVERLOAD="u-boot-s905x-s912.bin"
         MAINLINE_UBOOT=""
         ANDROID_UBOOT=""
         AMLOGIC_SOC="s905w"
         SKIP=700
         ;;
      99) FDTFILE=${SPECIFY_DTB}
         UBOOT_OVERLOAD=""
         MAINLINE_UBOOT=""
         ANDROID_UBOOT=""
         AMLOGIC_SOC=""
         SKIP=700
         ;;
      0) cat <<EOF
Please enter the .dtb file name of your box, do not include the path.
For example: $FDTFILE
EOF
         echo  "Enter the .dtb File name:"
         read  CUST_FDTFILE
         FDTFILE=${CUST_FDTFILE}
         UBOOT_OVERLOAD=""
         MAINLINE_UBOOT=""
         ANDROID_UBOOT=""
         AMLOGIC_SOC=""
         SKIP=700
         ;;
      *) echo "Input error, exit!"
         exit 1
         ;;
esac

echo -e "FDT Value [ ${FDTFILE} ]"
echo "SKIP = ${SKIP} MB"

systemctl stop armbian-resize-filesystem.service
systemctl disable armbian-resize-filesystem.service

echo "Start backup u-boot default"
dd if="${DEV_EMMC}" of=/root/u-boot-default-aml.img bs=1M count=4 conv=fsync
exists_pts=$(parted ${DEV_EMMC} print | grep 'primary'| wc -l)
if [ "${exists_pts}" -gt "0" ];then
    i=1
    while [ "${i}" -le "${exists_pts}" ]; do
        parted -s ${DEV_EMMC} rm $i 2>/dev/null
        let i++
    done
fi
dd if=/dev/zero of=${DEV_EMMC} bs=512 count=1 conv=fsync

echo "Start create MBR and partittion"
parted -s "${DEV_EMMC}" mklabel msdos 2>/dev/null
parted -s "${DEV_EMMC}" mkpart primary fat32 $((SKIP*1024*1024))b $(( (SKIP+BOOT)*1024*1024 - 1 ))b 2>/dev/null
parted -s "${DEV_EMMC}" mkpart primary ext4 $(( (SKIP+BOOT)*1024*1024 ))b 100% 2>/dev/null

echo "Start write u-boot"
if  [[ -n "${MAINLINE_UBOOT}" && -f ${MAINLINE_UBOOT} ]]; then
    echo -e "Write Mainline bootloader: [ ${MAINLINE_UBOOT} ]"
    dd if=${MAINLINE_UBOOT} of=${DEV_EMMC} bs=1 count=444 conv=fsync
    dd if=${MAINLINE_UBOOT} of=${DEV_EMMC} bs=512 skip=1 seek=1 conv=fsync
elif [[ -n "${ANDROID_UBOOT}" && -f "${ANDROID_UBOOT}" ]]; then
    echo -e "Write Android bootloader: [ ${ANDROID_UBOOT} ]"
    dd if=${ANDROID_UBOOT} of=${DEV_EMMC} bs=1 count=444 conv=fsync
    dd if=${ANDROID_UBOOT} of=${DEV_EMMC} bs=512 skip=1 seek=1 conv=fsync
else
    echo "Restore the original u-boot"
    dd if=/root/u-boot-default-aml.img of="${DEV_EMMC}" conv=fsync bs=1 count=442
    dd if=/root/u-boot-default-aml.img of="${DEV_EMMC}" conv=fsync bs=512 skip=1 seek=1
fi

echo "Start copy system for eMMC."
mkdir -p /ddbr
chmod 777 /ddbr

PART_BOOT="${DEV_EMMC}p1"
PART_ROOT="${DEV_EMMC}p2"
DIR_INSTALL="/ddbr/install"

if [ -d ${DIR_INSTALL} ]; then
    rm -rf ${DIR_INSTALL}
fi
mkdir -p ${DIR_INSTALL}

if grep -q ${PART_BOOT} /proc/mounts ; then
    echo "Unmounting BOOT partiton."
    umount -f ${PART_BOOT}
fi
echo "Formatting BOOT partition..."
mkfs.vfat -n "BOOT_EMMC" ${PART_BOOT}

mount -o rw ${PART_BOOT} ${DIR_INSTALL}

echo "Start copy BOOT_EMMC partition data..."
cp -rf /boot/* ${DIR_INSTALL} && sync
rm -rf ${DIR_INSTALL}/'System Volume Information' 2>/dev/null

echo "Edit init config..."
sed -i "s|ROOTFS|ROOTFS_EMMC|g" ${DIR_INSTALL}/uEnv.txt
sed -i "s|meson.*.dtb|${FDTFILE}|g" ${DIR_INSTALL}/uEnv.txt

rm ${DIR_INSTALL}/s9*
rm ${DIR_INSTALL}/aml*
mv -f ${DIR_INSTALL}/boot-emmc.ini ${DIR_INSTALL}/boot.ini
sed -i "s|u-boot.ext|u-boot.emmc|g" ${DIR_INSTALL}/boot.ini
mv -f ${DIR_INSTALL}/boot-emmc.scr ${DIR_INSTALL}/boot.scr
mv -f ${DIR_INSTALL}/boot-emmc.cmd ${DIR_INSTALL}/boot.cmd

if [ -f ${DIR_INSTALL}/${UBOOT_OVERLOAD} ]; then
    echo "Copy [ ${UBOOT_OVERLOAD} ] to u-boot.emmc"
    cp -f ${DIR_INSTALL}/${UBOOT_OVERLOAD} ${DIR_INSTALL}/u-boot.emmc
else
    echo "Mv [ u-boot.sd ] to u-boot.emmc"
    mv -f ${DIR_INSTALL}/u-boot.sd ${DIR_INSTALL}/u-boot.emmc
fi

sync

umount ${DIR_INSTALL}

if grep -q ${PART_ROOT} /proc/mounts ; then
    echo "Unmounting ROOT partiton."
    umount -f ${PART_ROOT}
fi

echo "Formatting ROOT partition..."
mkfs.ext4 -F -L ROOTFS_EMMC ${PART_ROOT}

echo "Start copy ROOTFS_EMMC partition data..."
mount -t ext4 ${PART_ROOT} ${DIR_INSTALL}

cd /
mkdir -p ${DIR_INSTALL}/{boot/,dev/,media/,mnt/,proc/,run/,sys/,tmp/} && sync
COPY_SRC="bin etc home lib lib64 opt root sbin selinux srv usr var"
for src in ${COPY_SRC}; do
    echo "copy [ ${src} ] ..."
    tar -cf - ${src} | (cd ${DIR_INSTALL}; tar -xf -)
    sync
done
echo "Copy complete."

rm ${DIR_INSTALL}/etc/fstab
cat > ${DIR_INSTALL}/etc/fstab<<EOF
/dev/root       /               ext4            defaults,noatime,errors=remount-ro     	0 1
LABEL=BOOT_EMMC /boot           vfat            defaults                                0 0
tmpfs           /tmp            tmpfs           defaults,nosuid                         0 0
EOF

cd /
sync
umount ${DIR_INSTALL}
sleep 3

echo "*************************************************************************************************"
echo "Successful installed, please unplug the USB, re-insert the power supply to start the armbian."
echo "*************************************************************************************************"
exit 0

